namespace = debug_demand

debug_demand.1 = { # Set food demand
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts
	hidden = yes

	immediate = {
		if = {
			limit = { 
				NOT = { has_global_variable = food_demand_updated } 
			} # Limit so this can be fired in on_action events block without triggering for every country
			every_trade_center = {
				PRICE_set_food_mean_normalised_price = yes
			}
			every_country = {
				every_governorships = {
					# Step 1: set base demand, responding to the price of food
					DEMAND_set_demand_from_food_all = yes
					# Step 2: balance base demand so that it does not exceed actual unfulfilled food need
					DEMAND_scale_down_food_demand = yes
				}
			}
			set_global_variable = {
				name = food_demand_updated
				days = 2
			}
			if = {
				limit = {
					NOT = {
						has_global_variable = first_time_food_demand_updated
					}
					set_global_variable = first_time_food_demand_updated # This triggers a part of DEMAND_set_demand_from_food to limit demand for tradegoods with no stockpile available locally, reducing the early spiking and diving of food demand
				}
			}
		}
	}

}

debug_demand.2 = { # Set luxury demand
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts
	hidden = yes

	immediate = {
		if = {
			limit = { 
				NOT = { has_global_variable = luxury_demand_updated } 
			} # Limit so this can be fired in on_action events block without triggering for every country
			every_country = {
				every_governorships = {
					# Step 1: set base demand, responding to the price of food
					DEMAND_set_demand_from_luxury_all = yes
				}
			}
			set_global_variable = {
				name = luxury_demand_updated
				days = 2
			}
			if = {
				limit = {
					NOT = {
						has_global_variable = first_time_luxury_demand_updated
					}
				}
				set_global_variable = first_time_luxury_demand_updated # This triggers a part of DEMAND_set_demand_from_food to limit demand for tradegoods with no stockpile available locally, reducing the early spiking and diving of food demand
			}
		}
	}

}

debug_demand.3 = { # Holding event for industrial production
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts
	hidden = yes

	immediate = {
		set_local_variable = MANUFACTURE_production_phase
		every_governorships = {
			MANUFACTURE_get_all_input_availability = yes
			MANUFACTURE_all = yes
		}
		set_local_variable = MANUFACTURE_production_phase
	}
}

debug_demand.4 = { # Test producing industrial goods
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts
	hidden = yes

	immediate = {
		
		every_governorships = {
			MANUFACTURE_all = yes
			set_local_variable = MANUFACTURE_production_phase
			MANUFACTURE_get_all_input_availability = yes
			MANUFACTURE_all = yes
			remove_local_variable = MANUFACTURE_production_phase
		}
		
	}
}

debug_demand.5 = { # Cottageindustry tick
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts
	hidden = yes

	immediate = {
		
		if = {
			limit = {
				NOT = {
					has_global_variable = COTTAGEIND_cycle_done
				}
			}
			every_country = {
				every_governorships = {
					COTTAGEIND_produce_all = yes
				}
			}
			set_global_variable = {
				name = COTTAGEIND_cycle_done
				days = 1
			}
		}

	}
}