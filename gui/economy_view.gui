types economy_types {
	type policy_button = container {
		tooltip = "[EconomicPolicyGlue.GetTooltip]"
		
		button_radial = {
			layoutpolicy_horizontal = expanding
			block "transparency" {}
			blockoverride "On_click"
			{
				#onclick = "[ClickHighlight(EconomicPolicyGlue.GetHighlightKey)]" #TODO Red King stuff?
				onclick = "[EconomicPolicyGlue.OnClick]"
			}
			
			blockoverride "ShowDot"
			{
				trigger_when = "[EconomicPolicyGlue.IsSelected]"
			} 
			
			blockoverride "HideDot" 
			{
				trigger_when = "[Not(EconomicPolicyGlue.IsSelected)]"
			} 
			
			#icon = { #TODO Red King stuff?
			#	using = highlight_button_circle_45
			#	visible = "[ShouldHighlight(EconomicPolicyGlue.GetHighlightKey)]"
			#}
			
		} 
	}
}

base_window = {
	gfxtype = windowgfx
	name = "economy_view"
	parentanchor = top|left
	size = { 640 900 }
	widgetanchor = top|left
	movable = no
	using = main_window_template
	using = FadeStates

	using = advice_trigger_highlights
	
	### Audio ###
	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	state = {
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	
	vbox = {
		using = MainWindowHeaderBox

		blockoverride "FlagOrIcon"
		{
			icon = {
				texture = "gfx/interface/base_parts/yellow_button_color_200fs.dds"
				framesize = { 100 100 }
				frame = 6
				position = { -2 -2 }
				size = { 32 32 }
				modify_texture = {
					texture = "gfx/interface/icons/menu_buttons/menu_economy.dds"
					blend_mode = alphamultiply
				}
			}
		}

		blockoverride "Title_text"
		{
			text = "ECONOMY_MENU_HEADER"
		}

		blockoverride "White_buttons" 
		{
			button_back = { 
				shortcut = "previous_window"
				onclick = "[EconomyView.OnPrevious]"
				tooltip = "PREVIOUS_ECONOMY_VIEW"
			}
			
			button_close = {
				onclick = "[EconomyView.OnClose]"
				tooltip = "CLOSE"
				shortcut = "close_window"
			}
		}
		
		vbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				allow_outside = yes
				container = {
					allow_outside = yes
					margin_widget = {
					allow_outside = yes
						name = "Debt and reserves"
						minimumsize = { 0 198 }
						margin_top = -20
						margin_left = -300
						layoutpolicy_horizontal = expanding

						flowcontainer = {
						direction = vertical
						spacing = 6

							sub_header_v = {
								size = { 100% 0 }
								blockoverride "Title_text" { text = "National debt" }
							}

							flowcontainer = {
								direction = horizontal 
								spacing = 6
								margin_top = 20

								text_button_square = {
									position = { 90 -3 }
									name = "unlock_national_debt"
									blockoverride "Center_text" { text = "U" }
									blockoverride "On_click" { 
										onclick = "[GetVariableSystem.Toggle('national_debt_lock')]"
									}
									tooltip = "NATIONAL_DEBT_LOCK_TT"
									parentanchor = hcenter
									size = { 24 24 }
								}

								icon_and_text = {
									tooltip = "NATIONAL_DEBT_TOOLTIP"
									size = { 150 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/treasury.dds" }
									blockoverride "Text" { align = left text = "[EconomyView.GetPlayer.Custom('national_debt_text')]" }	
								}
								text_button_square = {
									position = { 90 -3 }
									name = "issue_national_debt_big"
									datacontext = "[GetScriptedGui('CURRENCY_issue_national_debt_100k')]"
									enabled = "[GetVariableSystem.Exists('national_debt_lock')]"
									blockoverride "Center_text" { text = "++" }
									blockoverride "On_click" { 
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]" 
										onrightclick = "[GetScriptedGui('CURRENCY_issue_national_debt_1m').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
									tooltip = "ISSUE_NATIONAL_DEBT_BIG_TT"
									parentanchor = top|hcenter
									size = { 24 24 }
								}
								text_button_square = {
									position = { 90 -3 }
									name = "issue_national_debt"
									datacontext = "[GetScriptedGui('CURRENCY_issue_national_debt')]"
									enabled = "[GetVariableSystem.Exists('national_debt_lock')]"
									blockoverride "Center_text" { text = "+" }
									blockoverride "On_click" { 
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]" 
										onrightclick = "[GetScriptedGui('CURRENCY_issue_national_debt_10k').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
									tooltip = "ISSUE_NATIONAL_DEBT_TT"
									parentanchor = top|hcenter
									size = { 24 24 }
								}
								text_button_square = {
									position = { 120 -3 }
									name = "repay_national_debt"
									datacontext = "[GetScriptedGui('CURRENCY_repay_national_debt')]"
									enabled = "[GetVariableSystem.Exists('national_debt_lock')]"
									blockoverride "Center_text" { text = "-" }
									blockoverride "On_click" { 
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										onrightclick = "[GetScriptedGui('CURRENCY_repay_national_debt_10k').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
									tooltip = "REPAY_NATIONAL_DEBT_TT"
									parentanchor = top|hcenter
									size = { 24 24 }
								}
								text_button_square = {
									position = { 90 -3 }
									name = "repay_national_debt_big"
									datacontext = "[GetScriptedGui('CURRENCY_repay_national_debt_100k')]"
									enabled = "[GetVariableSystem.Exists('national_debt_lock')]"
									blockoverride "Center_text" { text = "--" }
									blockoverride "On_click" { 
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]" 
										onrightclick = "[GetScriptedGui('CURRENCY_repay_national_debt_1m').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
									tooltip = "REPAY_NATIONAL_DEBT_BIG_TT"
									parentanchor = top|hcenter
									size = { 24 24 }
								}
							}
							flowcontainer = {
								direction = horizontal
								icon_and_text = {
									tooltip = "NATIONAL_DEBT_INTEREST_TT"
									size = { 300 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/treasury.dds" }
									blockoverride "Text" { align = left text = "NATIONAL_DEBT_INTEREST_TEXT" }	
								}
							}
							sub_header_v = {
								size = { 100% 0 }
								blockoverride "Title_text" { text = "Privately held cash" }
							}

							flowcontainer = {
								direction = vertical 
								spacing = 6
								margin_top = 20

								icon_and_text = {
									tooltip = "AMT_CIRCULATED_TOOLTIP"
									size = { 300 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/treasury.dds" }
									blockoverride "Text" { align = left text = "AMT_CIRCULATED_TEXT" }	
								}
								flowcontainer = {
									icon_and_text = {
										tooltip = "MINTING_RATE_TT"
										size = { 250 0 }
										blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/income.dds" }
										blockoverride "Text" { align = left text = "MINTING_RATE_TEXT" }	
									}
									text_button_square = {
										position = { 90 -3 }
										name = "increase_minting_rate"
										datacontext = "[GetScriptedGui('CURRENCY_increase_minting_rate')]"
										blockoverride "Center_text" { text = "+" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]" 
											onrightclick = "[GetScriptedGui('CURRENCY_increase_minting_rate_10k').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "#L #G Increase #!#!minting rate by 1,000 (right click 10x)"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}
									text_button_square = {
										position = { 120 -3 }
										name = "decrease_minting_rate"
										datacontext = "[GetScriptedGui('CURRENCY_decrease_minting_rate')]"
										blockoverride "Center_text" { text = "-" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
											onrightclick = "[GetScriptedGui('CURRENCY_decrease_minting_rate_10k').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "#L #R Decrease #!#!minting rate by 1,000 (right click 10x)"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}
								}
								textbox = {
									tooltip = "[EconomyView.GetPlayer.Custom('inflation_deflation_tooltip')]"
									size = { 300 45 } 
									align = left 
									using = BaseFontM
									text = "[EconomyView.GetPlayer.Custom('inflation_deflation_text')]"
								}
							}
							sub_header_v = {
								size = { 100% 0 }
								blockoverride "Title_text" { text = "State precious metal reserves" }
							}
							flowcontainer = {
								direction = vertical
								spacing = 6
								margin_top = 25
								size = { 320 100}
								icon_and_text = {
									tooltip = "RESERVE_VALUE_GOLD_TT"
									size = { 340 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/tradegoods/gold.dds" }
									blockoverride "Text" { align = left text = "[EconomyView.GetPlayer.MakeScope.GetVariable('gold_reserve_size').GetValue|0]00 (+[EconomyView.GetPlayer.MakeScope.GetVariable('gold_reserve_actual_change').GetValue|0]00/[EconomyView.GetPlayer.MakeScope.GetVariable('gold_accumulation_rate').GetValue|0]00 lb)" fontsize = 14 }
									text_button_square = {
										position = { 70 -3 }
										name = "increase_gold_reserve_rate"
										datacontext = "[GetScriptedGui('CURRENCY_increase_reserve_accumulation_gold')]"
										blockoverride "Center_text" { text = "+" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]" 
											onrightclick = "[GetScriptedGui('CURRENCY_increase_reserve_accumulation_gold_10x').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "#L #G Increase #!#!accumulation rate by 100 lb (Right-click 1,000lb)"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}
									text_button_square = {
										position = { 100 -3 }
										name = "decrease_gold_reserve_rate"
										datacontext = "[GetScriptedGui('CURRENCY_decrease_reserve_accumulation_gold')]"
										blockoverride "Center_text" { text = "-" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
											onrightclick = "[GetScriptedGui('CURRENCY_decrease_reserve_accumulation_gold_10x').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "#L #R Decrease #!#!accumulation rate by 100 lb (Right-click 1,000lb)"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}
									text_button_square = {
										position = { 140 -3 }
										name = "sell_off_reserve_gold"
										datacontext = "[GetScriptedGui('CURRENCY_sell_off_reserve_gold')]"
										blockoverride "Center_text" { text = "S" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
											onrightclick = "[GetScriptedGui('CURRENCY_sell_off_reserve_gold_10').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "SELL_OFF_RESERVE_GOLD_TT"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}
								}
								icon_and_text = {
									tooltip = "RESERVE_VALUE_SILVER_TT"
									size = { 340 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/tradegoods/silver.dds" }
									blockoverride "Text" { align = left text = "[EconomyView.GetPlayer.MakeScope.GetVariable('silver_reserve_size').GetValue|0]00 (+[EconomyView.GetPlayer.MakeScope.GetVariable('silver_reserve_actual_change').GetValue|0]00/[EconomyView.GetPlayer.MakeScope.GetVariable('silver_accumulation_rate').GetValue|0]00 lb)" fontsize = 14 }

									text_button_square = {
										position = { 70 -3 }
										name = "increase_silver_reserve_rate"
										datacontext = "[GetScriptedGui('CURRENCY_increase_reserve_accumulation_silver')]"
										visible = "[Not(WarOverview.GetWar.IsCivilWar)]"
										blockoverride "Center_text" { text = "+" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
											onrightclick = "[GetScriptedGui('CURRENCY_increase_reserve_accumulation_silver_10x').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "#L #G Increase #!#!accumulation rate by 100 lb (Right-click 1,000lb)"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}
									text_button_square = {
										position = { 100 -3 }
										name = "decrease_silver_reserve_rate"
										datacontext = "[GetScriptedGui('CURRENCY_decrease_reserve_accumulation_silver')]"
										visible = "[Not(WarOverview.GetWar.IsCivilWar)]"
										blockoverride "Center_text" { text = "-" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
											onrightclick = "[GetScriptedGui('CURRENCY_decrease_reserve_accumulation_silver_10x').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "#L #R Decrease #!#!accumulation rate by 100 lb (Right-click 1,000lb)"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}
									text_button_square = {
										position = { 140 -3 }
										name = "sell_off_reserve_silver"
										datacontext = "[GetScriptedGui('CURRENCY_sell_off_reserve_silver')]"
										blockoverride "Center_text" { text = "S" }
										blockoverride "On_click" { 
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
											onrightclick = "[GetScriptedGui('CURRENCY_sell_off_reserve_silver_10').Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
										}
										tooltip = "SELL_OFF_RESERVE_SILVER_TT"
										parentanchor = bottom|hcenter
										size = { 24 24 }
									}	
								}
							}
						}
						
					}
					margin_widget = {
						allow_outside = yes
						name = "Currency"
						minimumsize = { 0 198 }
						margin_top = -20
						margin_left = 0
						layoutpolicy_horizontal = expanding

						flowcontainer = {
						direction = vertical
						spacing = 6
						position = { 30 0 }

							sub_header_v = {
								size = { 275 0 }
								blockoverride "Title_text" { text = "Currency: [EconomyView.GetPlayer.MakeScope.GetVariable('official_currency').GetProvince.MakeScope.GetVariable('currency_name').GetFlagName]" }
							}

							flowcontainer = {
								direction = vertical 
								spacing = 6
								margin_top = 20
								datacontext = "[EconomyView.GetPlayer.MakeScope.GetVariable('official_currency').GetProvince]"

								icon_and_text = {
									tooltip = "CURRENCY_RESERVE_EXCHANGE_RATE_TT"
									size = { 250 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/tradegoods/gold.dds" }
									blockoverride "Text" { align = left text = " [Province.MakeScope.GetVariable('units_to_the_lb').GetValue|0] / lb" }	
								}

								icon_and_text = {
									tooltip = "CURRENCY_BASE_EXCHANGE_VALUE_TT"
									size = { 250 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/governor_policies/acquisition_of_wealth.dds" }
									blockoverride "Text" { align = left text = "[GuiScope.SetRoot( EconomyView.GetPlayer.MakeScope ).ScriptValue('CURRENCY_wealth_value_1_unit')|3] ([GuiScope.SetRoot( EconomyView.GetPlayer.MakeScope ).ScriptValue('CURRENCY_wealth_value_1_unit_scaled_by_reserve_ratio')|3])" }	
								}

								icon_and_text = {
									tooltip = "CURRENCY_RESERVE_RATIO_TT"
									size = { 250 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/local_tax_modifier.dds" }
									blockoverride "Text" { align = left text = "[GuiScope.SetRoot( EconomyView.GetPlayer.MakeScope ).ScriptValue('CURRENCY_reserve_ratio_total')|%] ([GuiScope.SetRoot( EconomyView.GetPlayer.MakeScope ).ScriptValue('CURRENCY_ideal_reserve_ratio')|%])" }	
								}

								widget = {
									size = { 0 20 }
								}

								icon_and_text = {
									tooltip = "Average quarterly cost of living for 1 family"
									size = { 250 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/great_work/effects/gw_effect_tax_and_commerce.dds" }
									blockoverride "Text" { align = left text = "[GuiScope.SetRoot( EconomyView.GetPlayer.MakeScope ).ScriptValue('CURRENCY_essentials_buying_power')|2] [EconomyView.GetPlayer.MakeScope.GetVariable('official_currency').GetProvince.MakeScope.GetVariable('currency_name').GetFlagName]" }	
								}

								widget = {
									size = { 0 20 }
								}
								icon_and_text = {
									tooltip = "Test"
									size = { 250 0 }
									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/treasury.dds" }
									blockoverride "Text" { align = left text = "List countries pegged to this currency" }	
								}
							}

						}
						
					}
				}
			}
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				container = {

					container = {
						position = { 0 120 }
					
						container = {
							name = "income header"
							position = { 5 0 }
							using = NoninteractableBG
							sub_header = {
								size = { 206 0 }
								position = { -8 -2 }
								blockoverride "Title_text" { text = "INCOMES_HEADER" }
							}
							textbox = {
								position = { 1 -2 }
								parentanchor = top|right
								autoresize = yes
								text = "#g +#![EconomyView.GetTotalIncome|+2]@gold!"
								using = BaseFontM
							}
							widget = {
								position = { 273 0 }
							}
						}
						
						
						dynamicgridbox = {
							name = "income_grid"
							position = { 0 47 }
							size = { 180 200 }
							datamodel = "[EconomyView.GetIncome]"
							item = {
								flowcontainer = {
									direction = vertical
									container = {
										ignoreinvisible = yes
										alpha = "[TransparentIfTrue( And( EqualTo_int32( EconomyView.GetPlayer.GetNumOfSubjects, '(int32)0' ), IncomeItem.IsTribute ) )]"
										using = NoninteractableBG
										
										blockoverride "Margins" 
										{
											margin = { 4 4 }
											margin_bottom = 0
											margin_top = 6
										}
										
										container = {
											tooltip = "[IncomeItem.GetTooltip]"

											textbox = {
												position = { 12 2 }
												autoresize = yes
												using = BaseFontS
												using = Black_FontColor
												text = "[IncomeItem.GetName]"
											}
											
											icon_and_text = {
												position = { 152 -2 }
												size = { 132 0 }
												blockoverride "Text" { text = "[IncomeItem.GetValue|2]" }
												blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/treasury.dds" }
											}
										}

										icon_and_text = {
											position = { 152 34 }
											size = { 132 0 }
											blockoverride "Text" { text = "[IncomeItem.GetModifierValue]" }
											blockoverride "Icon" { texture = "[IncomeItem.GetModifierIcon]" }
											tooltip = "[IncomeItem.GetModifierTooltip]"
										}
										
										dynamicgridbox = {
											position = { 12 40 }
											datamodel = "[IncomeItem.GetPolicies]"
											flipdirection = yes
											item = {
												widget = {
													size = { 40 40 }
													policy_button = {
														enabled = "[And(EconomicPolicyGlue.CanClick, Not(And(EqualTo_int32( EconomyView.GetPlayer.GetNumOfSubjects, '(int32)0' ), IncomeItem.IsTribute)))]"
														blockoverride "transparency" {
															alpha = "[TransparentIfTrue( And( EqualTo_int32( EconomyView.GetPlayer.GetNumOfSubjects, '(int32)0' ), IncomeItem.IsTribute ) )]"
														}
													}
												}
											}
										}
									}
									widget = { size = { 4 12 } } # Item Spacing
								}
							}
						}
					}
					container = {
						position = { 307 60 }
						
						container = {
							name = "expenses header"
							position = { 5 0 }
							using = NoninteractableBG
							sub_header = {
								size = { 206 0 }
								position = { -8 -2 }
								blockoverride "Title_text" { text = "EXPENSES_HEADER" }
							}
							textbox = {
								position = { 1 -2 }
								parentanchor = top|right
								autoresize = yes
								text = "#r -#![EconomyView.GetTotalExpense|-2]@gold!"
								using = BaseFontM
							}
							widget = {
								position = { 273 0 }
							}
						}
						
						dynamicgridbox = {
							name = "expense_grid"
							position = { 0 47 }
							size = { 180 200 }
							datamodel = "[EconomyView.GetExpense]"
							item = {
								flowcontainer = {
									direction = vertical
									container = {
										ignoreinvisible = yes
										alpha = "[TransparentIfTrue(Not(ExpenseItem.IsEnabled))]"
										using = NoninteractableBG
										
										blockoverride "Margins" 
										{
											margin = { 4 4 }
											margin_bottom = 0
											margin_top = 6
										}
										
										container = {
											tooltip = "[ExpenseItem.GetTooltip]"

											textbox = {
												position = { 12 2 }
												autoresize = yes
												using = BaseFontS
												using = Black_FontColor
												text = "[ExpenseItem.GetName]"
											}
											
											icon_and_text = {
												position = { 152 -4 }
												size = { 132 0 }
												blockoverride "Text" { text = "[ExpenseItem.GetValue|2]" }
												blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/treasury.dds" }
											}
										}

										icon_and_text = {
											position = { 152 34 }
											size = { 132 0 }
											visible = "[ExpenseItem.HasModifier]"
											blockoverride "Text" { text = "[ExpenseItem.GetModifierValue]" }
											blockoverride "Icon" { texture = "[ExpenseItem.GetModifierIcon]" }
											tooltip = "[ExpenseItem.GetModifierTooltip]"
										}
										
										dynamicgridbox = {
											position = { 12 40 }
											datamodel = "[ExpenseItem.GetPolicies]"
											flipdirection = yes
											item = {
												widget = {
													size = { 40 40 }
													policy_button = {
														enabled = "[And(EconomicPolicyGlue.CanClick, ExpenseItem.IsEnabled)]"
														blockoverride "transparency" {
															alpha = "[TransparentIfTrue(Not(ExpenseItem.IsEnabled))]"
														}
													}
												}
											}
										}
									}
									widget = { size = { 4 12 } } # Item Spacing
								}
							}
						}
					}
				}
				vbox = {
					layoutpolicy_vertical = expanding
				}
			}
		}
	}
}
