SHIPPING_total_capacity_TZ = {
	# Scope: Trade center
	# Function: Count the total shipping power in a tradezone
	value = 0
	every_country = {
		limit = {
			any_owned_province = {
				state.governorship.var:trade_center = ROOT	
			}
		}
		every_owned_province = {
			limit = {
				state.governorship.var:trade_center = ROOT		
			}
			#add = SHIPPING_province_power
			add = SHIPPING_province_power		
		}
	}
}

SHIPPING_percentage_in_TZ = {
	# Scope: TZ shipping tracking province, used in piechart_update.1
	# Function: Get the country's percentage of shipping power in a tradezone
	value = var:shipping_power_total
	divide = var:tracking_TZ_shipping_for_TZ.SHIPPING_total_in_TZ
}

SHIPPING_total_in_TZ = {
	# Scope: trade center province
	value = 0
	every_in_list = {
		variable = shipping_power_list
		add = var:shipping_power_total
	}
}

# Province scope

SHIPPING_natural_harbour_bonus = {
	value = 10
}

SHIPPING_trade_chokepoint_bonus = {
	value = 5
}

SHIPPING_major_estuary_bonus = {
	value = 5
}

SHIPPING_port_bonus = {
	value = num_of_port_building
	add = num_of_river_port_building
	multiply = civilization_value
	multiply = 0.1
	if = {
		limit = {
			OR = {
				has_variable = major_estuary
				has_variable = trade_chokepoint
			}
		}
		multiply = 1.5
	}
}

SHIPPING_commerce_district_bonus = {
	value = num_of_URB_commerce_district
}

SHIPPING_railway_bonus = {
	value = num_of_INF_railway_upgrade
}

SHIPPING_depots_ports_river_ports_and_canals_bonus = {
	value = num_of_INF_depot
	add = num_of_port_building
	add = num_of_river_port_building
	add = num_of_INF_canal
	multiply = civilization_value
	multiply = 0.025
}

SHIPPING_depots_ports_river_ports_and_canals_bonus_governorship = {
	every_governorship_state = {
		every_state_province = {
			add = SHIPPING_depots_ports_river_ports_and_canals_bonus
		}
	}
}

SHIPPING_governorship_infrastructure_capacity_bonus = {
	value = 0
	state.governorship = {
		if = {
			limit = {
				TRADE_governorship_infrastructure_capacity_svalue > 0
			}
			add = TRADE_governorship_infrastructure_capacity_svalue
			divide = governorship_num_provinces
		}
	}
	max = num_of_INF_depot
}

governorship_num_provinces = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			add = 1
		}
	}
}

SHIPPING_province_power = {
	# Scope: Province
	# Function: Gets the province's shipping power

	value = 0

	if = {
		limit = {
			has_owner = yes
		}
		#add = SHIPPING_governorship_infrastructure_capacity_bonus # REMOVED: This was too slow to calculate

		add = SHIPPING_port_bonus
		add = SHIPPING_commerce_district_bonus
		add = SHIPPING_railway_bonus
		add = SHIPPING_depots_ports_river_ports_and_canals_bonus

		if = {
			limit = {
				has_variable = natural_harbour
			}
			add = SHIPPING_natural_harbour_bonus
		}
		if = {
			limit = {
				has_variable = trade_chokepoint
			}
			add = SHIPPING_trade_chokepoint_bonus
		}
		if = {
			limit = {
				has_variable = major_estuary
			}
			add = SHIPPING_major_estuary_bonus
		}

		# Unique bonuses

		if = {
			limit = {
				has_variable = suez_canal
			}
			add = 50 # TBD - needs balancing
		}
		if = {
			limit = {
				has_variable = panama_canal
			}
			add = 50 # TBD - needs balancing
		}
		if = {
			limit = {
				has_variable = kiel_canal
			}
			add = 50 # TBD - needs balancing
		}

		if = {
			limit = {
				OR = {
					is_coastal = yes
					has_minor_river = yes
				}
			}
			add = 1
		}

		min = 0
	}

}